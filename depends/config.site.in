# shellcheck shell=sh disable=SC2034 # Many variables set will be used in ./configure but shellcheck doesn't know that
# hence: disable=SC2034. See: https://github.com/koalaman/shellcheck/wiki/Directive

# Initialize dependencies prefix
depends_prefix="$(cd "$(dirname ${ac_site_file})/.." && pwd)"

# Cross-compiling flag (may be used in other scripts)
cross_compiling=maybe
host_alias=@HOST@
ac_tool_prefix="${host_alias}-"

# Default directories and paths for Boost and Qt
if test -z "$with_boost"; then
  with_boost="$depends_prefix"
fi

if test -z "$with_qt_plugindir"; then
  with_qt_plugindir="$depends_prefix/plugins"
fi

if test -z "$with_qt_translationdir"; then
  with_qt_translationdir="$depends_prefix/translations"
fi

if test -z "$with_qt_bindir"; then
  with_qt_bindir="$depends_prefix/native/bin"
fi

if test -z "$with_protoc_bindir"; then
  with_protoc_bindir="$depends_prefix/native/bin"
fi

# Handle optional components (wallet, upnp, zmq, etc.)
if test -z "$enable_wallet" && test -n "@no_wallet@"; then
  enable_wallet=no
fi

if test -z "$with_miniupnpc" && test -n "@no_upnp@"; then
  with_miniupnpc=no
fi

if test -z "$with_natpmp" && test -n "@no_natpmp@"; then
  with_natpmp=no
fi

if test -z "$with_gui" && test -n "@no_qt@"; then
  with_gui=no
fi

if test -z "$enable_zmq" && test -n "@no_zmq@"; then
  enable_zmq=no
fi

if test -n "$disable_bip70" && test -n "@disable_bip70@"; then
  disable_bip70=no
fi

# Debug mode and qt5_debug flag
if test -n "@debug@" && test -z "@no_qt@" && test "x$with_gui" != xno; then
  with_gui=qt5_debug
fi

# Handle macOS-specific Brew check
if test "@host_os@" = darwin; then
  BREW=no
fi

# Add native bin directories to the PATH
PATH="$depends_prefix/native/bin:$PATH"

# Set up pkg-config for static linking
PKG_CONFIG="$(which pkg-config) --static"

# Export pkg-config related variables
export PKG_CONFIG_LIBDIR="$depends_prefix/lib/pkgconfig"
export PKG_CONFIG_PATH="$depends_prefix/share/pkgconfig"

# Set up flags for compilation and linking
CPPFLAGS="-I$depends_prefix/include/ $CPPFLAGS"
LDFLAGS="-L$depends_prefix/lib $LDFLAGS"

# Handle CC, CXX, AR, RANLIB, NM
if test -n "@CC@" && test -z "${CC}"; then
  CC="@CC@"
fi

if test -n "@CXX@" && test -z "${CXX}"; then
  CXX="@CXX@"
fi

if test -n "@AR@"; then
  AR="@AR@"
  ac_cv_path_ac_pt_AR=${AR}
fi

if test -n "@RANLIB@"; then
  RANLIB="@RANLIB@"
  ac_cv_path_ac_pt_RANLIB=${RANLIB}
fi

if test -n "@NM@"; then
  NM="@NM@"
  ac_cv_path_ac_pt_NM=${NM}
fi

# Debug and compilation flags
if test -n "@debug@"; then
  enable_reduce_exports=no
fi

# Additional flags (CFLAGS, CXXFLAGS, CPPFLAGS, LDFLAGS)
if test -n "@CFLAGS@"; then
  CFLAGS="@CFLAGS@ $CFLAGS"
fi

if test -n "@CXXFLAGS@"; then
  CXXFLAGS="@CXXFLAGS@ $CXXFLAGS"
fi

if test -n "@CPPFLAGS@"; then
  CPPFLAGS="@CPPFLAGS@ $CPPFLAGS"
fi

if test -n "@LDFLAGS@"; then
  LDFLAGS="@LDFLAGS@ $LDFLAGS"
fi

# Export the Python path for native libraries
PYTHONPATH="${depends_prefix}/native/lib/python3/dist-packages${PYTHONPATH:+${PATH_SEPARATOR}}${PYTHONPATH}"

# Output some environment variable info for debugging
echo "Configuration complete. Here are the current settings:"
echo "depends_prefix=$depends_prefix"
echo "PKG_CONFIG_LIBDIR=$PKG_CONFIG_LIBDIR"
echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
echo "CFLAGS=$CFLAGS"
echo "CXXFLAGS=$CXXFLAGS"
echo "LDFLAGS=$LDFLAGS"

