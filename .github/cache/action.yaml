name: cache-wrapper
description: Split restore/save wrapper for actions/cache@v4 with normalized inputs.

inputs:
  mode:
    description: "'restore' | 'save' | 'auto' (default restore)"
    required: false
    default: restore
  key:
    description: Primary cache key
    required: true
  paths:
    description: Newline-separated paths to cache
    required: true
  restore_keys:
    description: Newline-separated fallback restore keys
    required: false
    default: ""
  upload_chunk_size:
    description: Upload chunk size (save)
    required: false
    default: ""
  fail_on_cache_miss:
    description: Fail when miss (restore)
    required: false
    default: ""
  lookup_only:
    description: Lookup-only (restore)
    required: false
    default: ""

outputs:
  cache-hit:
    description: Cache hit from restore
    value: ${{ steps.restore.outputs.cache-hit }}

runs:
  using: composite
  steps:
    - name: Normalize mode
      id: norm
      shell: bash
      run: |
        set -euo pipefail
        mode='${{ inputs.mode }}'
        if [ -z "$mode" ] || [ "$mode" = "auto" ]; then mode=restore; fi
        echo "mode=$mode" >> "$GITHUB_OUTPUT"

    - name: Restore cache
      id: restore
      if: ${{ steps.norm.outputs.mode == 'restore' && inputs.paths != '' }}
      uses: actions/cache/restore@v4
      with:
        key: ${{ inputs.key }}
        path: ${{ inputs.paths }}
        # hyphenated keys must be passed only to actions/cache
        restore-keys: ${{ inputs.restore_keys }}
        lookup-only: ${{ inputs.lookup_only }}
        fail-on-cache-miss: ${{ inputs.fail_on_cache_miss }}

    - name: Save cache
      if: ${{ steps.norm.outputs.mode == 'save' && inputs.paths != '' }}
      uses: actions/cache/save@v4
      with:
        key: ${{ inputs.key }}
        path: ${{ inputs.paths }}
        upload-chunk-size: ${{ inputs.upload_chunk_size }}
