# .github/cache/action.yaml — Wrapper around actions/cache@v4 with newline-friendly paths + restore/save split
name: "Cache wrapper"

description: "Wrapper for actions/cache@v4 that accepts newline-separated 'paths'. Provides explicit restore/save modes and diagnostics."

inputs:
  mode:
    description: 'Operation mode: restore|save'
    required: true
  key:
    description: 'Cache key'
    required: true
  paths:
    description: 'Newline-separated paths to cache (maps to actions/cache path).'
    required: false
  restore-keys:
    description: 'Restore keys (newline-separated; only used in restore mode)'
    required: false
  upload-chunk-size:
    description: 'Optional upload chunk size'
    required: false
  enableCrossOsArchive:
    description: 'Pass-through (boolean)'
    required: false
  fail-on-cache-miss:
    description: 'Pass-through (boolean) for restore mode'
    required: false
  lookup-only:
    description: 'Pass-through (boolean) for restore mode'
    required: false

runs:
  using: composite
  steps:
    - name: Echo cache inputs
      shell: bash
      run: |
        set -euo pipefail
        echo "Cache wrapper — mode: ${{ inputs.mode }}"
        echo "key: '${{ inputs.key }}'"
        echo "paths: '${{ inputs['paths'] }}'"
        echo "restore-keys: '${{ inputs['restore-keys'] }}'"
        echo "upload-chunk-size: '${{ inputs['upload-chunk-size'] }}'"
        echo "enableCrossOsArchive: '${{ inputs['enableCrossOsArchive'] }}'"
        echo "fail-on-cache-miss: '${{ inputs['fail-on-cache-miss'] }}'"
        echo "lookup-only: '${{ inputs['lookup-only'] }}'"

    - name: Validate mode
      shell: bash
      run: |
        set -euo pipefail
        case "${{ inputs.mode }}" in
          restore|save) ;; 
          *) echo "::error ::Invalid mode: '${{ inputs.mode }}' (expected 'restore' or 'save')"; exit 2;;
        esac

    - name: Skip when no paths provided
      if: ${{ inputs['paths'] == '' || inputs['paths'] == null }}
      shell: bash
      run: |
        echo "No paths provided to cache — skipping actions/cache"

    - name: Restore cache
      if: ${{ inputs.mode == 'restore' && inputs['paths'] != '' && inputs['paths'] != null }}
      uses: actions/cache/restore@v4
      with:
        key: ${{ inputs.key }}
        path: ${{ inputs['paths'] }}
        restore-keys: ${{ inputs['restore-keys'] }}
        enableCrossOsArchive: ${{ inputs['enableCrossOsArchive'] }}
        fail-on-cache-miss: ${{ inputs['fail-on-cache-miss'] }}
        lookup-only: ${{ inputs['lookup-only'] }}

    - name: Save cache
      if: ${{ inputs.mode == 'save' && inputs['paths'] != '' && inputs['paths'] != null }}
      uses: actions/cache/save@v4
      with:
        key: ${{ inputs.key }}
        path: ${{ inputs['paths'] }}
        upload-chunk-size: ${{ inputs['upload-chunk-size'] }}
        enableCrossOsArchive: ${{ inputs['enableCrossOsArchive'] }}
