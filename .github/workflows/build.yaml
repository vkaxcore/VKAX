name: Build VKAX

on:
  push:
    branches:
      - main
      - v100.11.5-android
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "17 5 * * *"

concurrency:
  group: build-vkax-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false

env:
  CCACHE_DIR: ${{ runner.temp }}/.ccache
  CCACHE_MAXSIZE: 500M
  ANDROID_NDK_VERSION: 26.1.10909125

jobs:
  linux:
    name: linux • ${{ matrix.host }} • depends
    runs-on: ubuntu-24.04
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - { host: x86_64-pc-linux-gnu, experimental: false }
          - { host: x86_64-unknown-netbsd, experimental: true }
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Submodules
        shell: bash
        run: |
          set -euo pipefail
          git submodule sync --recursive
          git submodule update --init --recursive --force --depth 1 || git submodule update --init --recursive --force

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential autoconf automake libtool pkg-config ccache bison zip unzip python3

      - name: Init ccache dir
        run: mkdir -p "$CCACHE_DIR"

      - name: Cache • restore ccache
        uses: ./.github/cache
        with:
          mode: restore
          key: linux-ccache-${{ matrix.host }}-${{ hashFiles('**/configure.ac','**/Makefile.am') }}
          restore-keys: linux-ccache-${{ matrix.host }}-
          paths: |
            ${{ env.CCACHE_DIR }}

      - name: Cache • restore depends prefix
        uses: ./.github/cache
        with:
          mode: restore
          key: linux-depends-${{ matrix.host }}-${{ hashFiles('depends/packages/*.mk','depends/packages/packages.mk','depends/Makefile','depends/patches/**') }}
          restore-keys: linux-depends-${{ matrix.host }}-
          paths: |
            depends/${{ matrix.host }}

      - name: Build depends
        shell: bash
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          export FALLBACK_DOWNLOAD_PATH=https://explorer.yerbas.org/depends/
          JOBS=$(getconf _NPROCESSORS_ONLN 2>/dev/null || nproc 2>/dev/null || echo 2)
          if grep -qE '^doctor:' depends/Makefile 2>/dev/null; then make -C depends doctor HOST=${HOST}; fi
          stdbuf -oL -eL make -C depends -j"${JOBS}" HOST=${HOST} NO_QT=1 V=1 2>&1 | tee -a depends.build.log

      - name: Configure
        shell: bash
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          ./autogen.sh
          export CONFIG_SITE="$PWD/depends/${HOST}/share/config.site"
          test -f "$CONFIG_SITE" || { echo "Missing config.site for $HOST"; exit 1; }
          ./configure --prefix="$PWD/dist/stage/${HOST}" --disable-bench --disable-tests --with-daemon --with-utils --without-gui

      - name: Build
        run: |
          JOBS=$(getconf _NPROCESSORS_ONLN 2>/dev/null || nproc 2>/dev/null || echo 2)
          make -j"${JOBS}" 2>&1 | tee -a build.log

      - name: Install (stage)
        run: |
          make install DESTDIR="$PWD/dist/stage/${{ matrix.host }}/root" 2>&1 | tee -a install.log

      - name: Package
        shell: bash
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          STRIP_TOOL="${HOST}-strip"; command -v "$STRIP_TOOL" >/dev/null 2>&1 || STRIP_TOOL="strip"
          mkdir -p "dist/${HOST}"
          for f in src/vkaxd src/vkax-cli src/vkax-tx src/qt/vkax-qt; do
            if [ -x "$f" ]; then "$STRIP_TOOL" -S "$f" || true; cp -f "$f" "dist/${HOST}/"; fi
          done
          if [ -d "dist/stage/${HOST}/root" ]; then
            tar -C "dist/stage/${HOST}/root" -czf "dist/${HOST}/vkax-${HOST}-install-tree.tar.gz" .
          fi
          (cd dist/${HOST} && sha256sum * > SHA256SUMS || true)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.host }}
          path: |
            dist/${{ matrix.host }}
            depends.build.log
            build.log
            install.log
          if-no-files-found: error

      - name: Cache • save ccache
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: linux-ccache-${{ matrix.host }}-${{ hashFiles('**/configure.ac','**/Makefile.am') }}
          paths: |
            ${{ env.CCACHE_DIR }}

      - name: Cache • save depends prefix
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: linux-depends-${{ matrix.host }}-${{ hashFiles('depends/packages/*.mk','depends/packages/packages.mk','depends/Makefile','depends/patches/**') }}
          paths: |
            depends/${{ matrix.host }}

  windows:
    name: windows • ${{ matrix.name }} • depends
    runs-on: windows-2022
    timeout-minutes: 180
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: msys2-mingw64, msystem: MINGW64, host: x86_64-w64-mingw32, experimental: false }
          - { name: msys2-mingw32, msystem: MINGW32, host: i686-w64-mingw32, experimental: true }
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Submodules
        shell: bash
        run: |
          set -euo pipefail
          git submodule sync --recursive
          git submodule update --init --recursive --force --depth 1 || git submodule update --init --recursive --force

      - name: MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            base-devel
            git
            make
            autoconf
            automake
            libtool
            pkgconf
            cmake
            bison
            patch
            zip
            unzip
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-ccache
            mingw-w64-i686-toolchain
            mingw-w64-i686-ccache

      - name: Init ccache dir
        shell: bash
        run: mkdir -p "$CCACHE_DIR"

      - name: Cache • restore ccache
        uses: ./.github/cache
        with:
          mode: restore
          key: windows-ccache-${{ matrix.host }}-${{ hashFiles('**/configure.ac','**/Makefile.am') }}
          restore-keys: windows-ccache-${{ matrix.host }}-
          paths: |
            ${{ env.CCACHE_DIR }}

      - name: Cache • restore depends prefix
        uses: ./.github/cache
        with:
          mode: restore
          key: windows-depends-${{ matrix.host }}-${{ hashFiles('depends/packages/*.mk','depends/packages/packages.mk','depends/Makefile','depends/patches/**') }}
          restore-keys: windows-depends-${{ matrix.host }}-
          paths: |
            depends/${{ matrix.host }}

      - name: Build depends (msys2)
        if: ${{ matrix.msystem == 'MINGW64' || matrix.msystem == 'MINGW32' }}
        shell: msys2 {0}
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          case "$MSYSTEM" in MINGW32) MINGW_PREFIX=/mingw32 ;; MINGW64) MINGW_PREFIX=/mingw64 ;; *) MINGW_PREFIX=/mingw64 ;; esac
          export PATH="$MINGW_PREFIX/bin:$PATH"
          export FALLBACK_DOWNLOAD_PATH=https://explorer.yerbas.org/depends/
          JOBS=$(nproc 2>/dev/null || echo 2)
          if grep -qE '^doctor:' depends/Makefile 2>/dev/null; then make -C depends doctor HOST=${HOST}; fi
          make -C depends -j"${JOBS}" HOST=${HOST} NO_QT=1 V=1 CC="ccache gcc" CXX="ccache g++" 2>&1 | tee -a depends.build.log

      - name: Configure (msys2)
        shell: msys2 {0}
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          case "$MSYSTEM" in MINGW32) MINGW_PREFIX=/mingw32 ;; MINGW64) MINGW_PREFIX=/mingw64 ;; *) MINGW_PREFIX=/mingw64 ;; esac
          export PATH="$MINGW_PREFIX/bin:$PATH"
          ./autogen.sh
          export CONFIG_SITE="$PWD/depends/${HOST}/share/config.site"
          test -f "$CONFIG_SITE" || { echo "Missing config.site for $HOST"; exit 1; }
          ./configure --prefix="$PWD/dist/stage/${HOST}" --disable-bench --disable-tests --with-daemon --with-utils --without-gui

      - name: Build (msys2)
        shell: msys2 {0}
        run: |
          JOBS=$(nproc 2>/dev/null || echo 2)
          make -j"${JOBS}" 2>&1 | tee -a build.log

      - name: Install (stage)
        shell: msys2 {0}
        env:
          HOST: ${{ matrix.host }}
        run: |
          make install DESTDIR="$PWD/dist/stage/${HOST}/root" 2>&1 | tee -a install.log

      - name: Package
        shell: msys2 {0}
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          STRIP_TOOL="${HOST}-strip"; command -v "$STRIP_TOOL" >/dev/null 2>&1 || STRIP_TOOL="strip"
          mkdir -p "dist/${HOST}"
          for f in src/vkaxd.exe src/vkax-cli.exe src/vkax-tx.exe src/qt/vkax-qt.exe; do
            if [ -x "$f" ]; then "$STRIP_TOOL" -S "$f" || true; cp -f "$f" "dist/${HOST}/"; fi
          done
          if [ -d "dist/stage/${HOST}/root" ]; then
            (cd "dist/stage/${HOST}/root" && /usr/bin/find . -type f -print0 | xargs -0 -I{} sh -c 'sha256sum "{}" || true') > "dist/${HOST}/INSTALL_TREE_SHA256SUMS" || true
            tar -C "dist/stage/${HOST}/root" -czf "dist/${HOST}/vkax-${HOST}-install-tree.tar.gz" .
          fi
          (cd dist/${HOST} && sha256sum * > SHA256SUMS || true)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.name }}
          path: |
            dist/${{ matrix.host }}
            depends.build.log
            build.log
            install.log
          if-no-files-found: error

      - name: Cache • save ccache
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: windows-ccache-${{ matrix.host }}-${{ hashFiles('**/configure.ac','**/Makefile.am') }}
          paths: |
            ${{ env.CCACHE_DIR }}

      - name: Cache • save depends prefix
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: windows-depends-${{ matrix.host }}-${{ hashFiles('depends/packages/*.mk','depends/packages/packages.mk','depends/Makefile','depends/patches/**') }}
          paths: |
            depends/${{ matrix.host }}

  macos:
    name: macos • ${{ matrix.host }} • depends
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 150
    strategy:
      fail-fast: false
      matrix:
        include:
          - { runner: macos-13, host: x86_64-apple-darwin }
          - { runner: macos-14, host: arm64-apple-darwin }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Submodules
        shell: bash
        run: |
          set -euo pipefail
          git submodule sync --recursive
          git submodule update --init --recursive --force --depth 1 || git submodule update --init --recursive --force

      - name: Homebrew base
        shell: bash
        run: |
          set -euo pipefail
          export HOMEBREW_NO_AUTO_UPDATE=1
          brew update
          brew install autoconf automake libtool pkg-config coreutils ccache

      - name: Init ccache dir
        run: mkdir -p "$CCACHE_DIR"

      - name: Cache • restore ccache
        uses: ./.github/cache
        with:
          mode: restore
          key: mac-ccache-${{ matrix.host }}-${{ hashFiles('**/configure.ac','**/Makefile.am') }}
          restore-keys: mac-ccache-${{ matrix.host }}-
          paths: |
            ${{ env.CCACHE_DIR }}

      - name: Cache • restore depends prefix
        uses: ./.github/cache
        with:
          mode: restore
          key: mac-depends-${{ matrix.host }}-${{ hashFiles('depends/packages/*.mk','depends/packages/packages.mk','depends/Makefile','depends/patches/**') }}
          restore-keys: mac-depends-${{ matrix.host }}-
          paths: |
            depends/${{ matrix.host }}

      - name: Build depends
        shell: bash
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          export FALLBACK_DOWNLOAD_PATH=https://explorer.yerbas.org/depends/
          JOBS=$(sysctl -n hw.ncpu 2>/dev/null || echo 3)
          if grep -qE '^doctor:' depends/Makefile 2>/dev/null; then make -C depends doctor HOST=${HOST}; fi
          stdbuf -oL -eL make -C depends -j"${JOBS}" HOST=${HOST} NO_QT=1 V=1 2>&1 | tee -a depends.build.log

      - name: Configure
        shell: bash
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          ./autogen.sh
          export CONFIG_SITE="$PWD/depends/${HOST}/share/config.site"
          test -f "$CONFIG_SITE" || { echo "Missing config.site for $HOST"; exit 1; }
          ./configure --prefix="$PWD/dist/stage/${HOST}" --disable-bench --disable-tests --with-daemon --with-utils --without-gui

      - name: Build
        run: |
          JOBS=$(sysctl -n hw.ncpu 2>/dev/null || echo 3)
          make -j"${JOBS}" 2>&1 | tee -a build.log

      - name: Install (stage)
        run: |
          make install DESTDIR="$PWD/dist/stage/${{ matrix.host }}/root" 2>&1 | tee -a install.log

      - name: Package
        shell: bash
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          STRIP_TOOL="${HOST}-strip"; command -v "$STRIP_TOOL" >/dev/null 2>&1 || STRIP_TOOL="strip"
          mkdir -p "dist/${HOST}"
          for f in src/vkaxd src/vkax-cli src/vkax-tx src/qt/vkax-qt; do
            if [ -x "$f" ]; then "$STRIP_TOOL" -S "$f" || true; cp -f "$f" "dist/${HOST}/"; fi
          done
          if [ -d "dist/stage/${HOST}/root" ]; then
            tar -C "dist/stage/${HOST}/root" -czf "dist/${HOST}/vkax-${HOST}-install-tree.tar.gz" .
          fi
          (cd dist/${HOST} && shasum -a 256 * > SHA256SUMS || true)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-${{ matrix.host }}
          path: |
            dist/${{ matrix.host }}
            depends.build.log
            build.log
            install.log
          if-no-files-found: error

      - name: Cache • save ccache
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: mac-ccache-${{ matrix.host }}-${{ hashFiles('**/configure.ac','**/Makefile.am') }}
          paths: |
            ${{ env.CCACHE_DIR }}

      - name: Cache • save depends prefix
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: mac-depends-${{ matrix.host }}-${{ hashFiles('depends/packages/*.mk','depends/packages/packages.mk','depends/Makefile','depends/patches/**') }}
          paths: |
            depends/${{ matrix.host }}

  android:
    name: android • ${{ matrix.abi }} • depends
    runs-on: ubuntu-24.04
    timeout-minutes: 180
    strategy:
      fail-fast: false
      matrix:
        include:
          - { abi: arm64-v8a, host: aarch64-linux-android, api: 24 }
          - { abi: armeabi-v7a, host: arm-linux-androideabi, api: 21 }
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/.android-sdk
      ANDROID_HOME: ${{ github.workspace }}/.android-sdk
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Submodules
        shell: bash
        run: |
          set -euo pipefail
          git submodule sync --recursive
          git submodule update --init --recursive --force --depth 1 || git submodule update --init --recursive --force

      - name: Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install cmdline-tools (minimal)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$ANDROID_SDK_ROOT"
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -o /tmp/clt.zip
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          unzip -q /tmp/clt.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> "$GITHUB_PATH"

      - name: Cache • restore Android SDK
        uses: ./.github/cache
        with:
          mode: restore
          key: android-sdk-ndk${{ env.ANDROID_NDK_VERSION }}-api${{ matrix.api }}
          restore-keys: android-sdk-
          paths: |
            ${{ env.ANDROID_SDK_ROOT }}

      - name: Accept Android licenses (seed)
        uses: ./.github/actions/android-accept-licenses

      - name: Force-accept licenses
        shell: bash
        run: |
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" --licenses || true
          ls -al "$ANDROID_SDK_ROOT/licenses" || true

      - name: Install Android packages (pinned)
        shell: bash
        env:
          ANDROID_API_LEVEL: ${{ matrix.api }}
        run: |
          set -euo pipefail
          SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          yes | "$SDKMGR" --sdk_root="$ANDROID_SDK_ROOT" --install             "platform-tools"             "platforms;android-${ANDROID_API_LEVEL}"             "build-tools;34.0.0"             "ndk;${ANDROID_NDK_VERSION}"
          echo "ANDROID_NDK=$ANDROID_SDK_ROOT/ndk/${ANDROID_NDK_VERSION}" >> "$GITHUB_ENV"
          echo "$ANDROID_SDK_ROOT/platform-tools" >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/ndk/${ANDROID_NDK_VERSION}/toolchains/llvm/prebuilt/linux-x86_64/bin" | cat - "$GITHUB_PATH" > "$GITHUB_PATH.tmp" && mv "$GITHUB_PATH.tmp" "$GITHUB_PATH"

      - name: Init ccache dir
        run: mkdir -p "$CCACHE_DIR"

      - name: Cache • restore ccache
        uses: ./.github/cache
        with:
          mode: restore
          key: android-ccache-${{ matrix.host }}-${{ hashFiles('**/configure.ac','**/Makefile.am') }}
          restore-keys: android-ccache-${{ matrix.host }}-
          paths: |
            ${{ env.CCACHE_DIR }}

      - name: Cache • restore depends prefix
        uses: ./.github/cache
        with:
          mode: restore
          key: android-depends-${{ matrix.host }}-${{ hashFiles('depends/packages/*.mk','depends/packages/packages.mk','depends/Makefile','depends/patches/**') }}
          restore-keys: android-depends-${{ matrix.host }}-
          paths: |
            depends/${{ matrix.host }}

      - name: Build depends (Android)
        shell: bash
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          export FALLBACK_DOWNLOAD_PATH=https://explorer.yerbas.org/depends/
          JOBS=$(getconf _NPROCESSORS_ONLN 2>/dev/null || nproc 2>/dev/null || echo 2)
          if grep -qE '^doctor:' depends/Makefile 2>/dev/null; then make -C depends doctor HOST=${HOST}; fi
          stdbuf -oL -eL make -C depends -j"${JOBS}" HOST=${HOST} ANDROID_SDK="${ANDROID_SDK_ROOT}" ANDROID_NDK="${ANDROID_NDK}" NO_QT=1 V=1 AR=llvm-ar RANLIB=llvm-ranlib STRIP=llvm-strip 2>&1 | tee -a depends.build.log

      - name: Configure
        shell: bash
        env:
          HOST: ${{ matrix.host }}
        run: |
          set -euo pipefail
          test -x "$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/clang"
          export PATH="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH"
          ./autogen.sh
          export CONFIG_SITE="$PWD/depends/${HOST}/share/config.site"
          test -f "$CONFIG_SITE" || { echo "Missing config.site for $HOST"; exit 1; }
          ./configure --prefix="$PWD/dist/stage/${HOST}" --disable-bench --disable-tests --with-daemon --with-utils --without-gui

      - name: Build
        run: |
          JOBS=$(getconf _NPROCESSORS_ONLN 2>/dev/null || nproc 2>/dev/null || echo 2)
          make -j"${JOBS}" 2>&1 | tee -a build.log

      - name: Install (stage)
        run: |
          make install DESTDIR="$PWD/dist/stage/${{ matrix.host }}/root" 2>&1 | tee -a install.log

      - name: Package
        shell: bash
        env:
          HOST: ${{ matrix.host }}
          ABI:  ${{ matrix.abi }}
        run: |
          set -euo pipefail
          STRIP_TOOL="llvm-strip"
          mkdir -p "dist/${HOST}-${ABI}"
          for f in src/vkaxd src/vkax-cli src/vkax-tx; do
            if [ -x "$f" ]; then "$STRIP_TOOL" -S "$f" || true; cp -f "$f" "dist/${HOST}-${ABI}/"; fi
          done
          if [ -d "dist/stage/${HOST}/root" ]; then
            tar -C "dist/stage/${HOST}/root" -czf "dist/${HOST}-${ABI}/vkax-${HOST}-${ABI}-install-tree.tar.gz" .
          fi
          (cd dist/${HOST}-${ABI} && sha256sum * > SHA256SUMS || true)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.abi }}
          path: |
            dist/${{ matrix.host }}-${{ matrix.abi }}
            depends.build.log
            build.log
            install.log
          if-no-files-found: error

      - name: Cache • save ccache
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: android-ccache-${{ matrix.host }}-${{ hashFiles('**/configure.ac','**/Makefile.am') }}
          paths: |
            ${{ env.CCACHE_DIR }}

      - name: Cache • save Android SDK
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: android-sdk-ndk${{ env.ANDROID_NDK_VERSION }}-api${{ matrix.api }}
          paths: |
            ${{ env.ANDROID_SDK_ROOT }}

      - name: Cache • save depends prefix
        if: always()
        uses: ./.github/cache
        with:
          mode: save
          key: android-depends-${{ matrix.host }}-${{ hashFiles('depends/packages/*.mk','depends/packages/packages.mk','depends/Makefile','depends/patches/**') }}
          paths: |
            depends/${{ matrix.host }}
