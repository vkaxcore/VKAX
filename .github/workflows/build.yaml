name: VKAX Multi-Platform Build

on:
  push:
    branches:
      - main
      - develop
      - v100.11.5*
  pull_request:
    branches:
      - develop
  workflow_dispatch:

env:
  COIN_NAME: vkax
  BUILD_DIR: vkax-build
  COMPRESS_DIR: vkax-compress
  TEST_DIR: vkax-test
  BOOST_VERSION: 1_73_0
  QT_PATH: /usr/local/opt/qt@5

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Read versions
        id: versions
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: build.properties
          properties: 'release-version snapshot-version'
      - name: Choose version
        id: selected-version
        shell: bash
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]] || [[ "$GITHUB_REF" == *develop ]]; then
            version=${{ steps.versions.outputs.snapshot-version }}
          else
            version=${{ steps.versions.outputs.release-version }}
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "BUILD_VERSION=$version" > version.txt
      - name: Upload version artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt
    outputs:
      version: ${{ steps.selected-version.outputs.version }}


  build-macos:
    name: macOS Build
    needs: get-version
    strategy:
      matrix:
        arch: [x86_64, arm64]
        macos: [12, 13]
    runs-on: macos-${{ matrix.macos }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: version
          path: .

      - name: Install Dependencies
        run: |
          brew update
          brew install automake libtool pkg-config miniupnpc librsvg libnatpmp zeromq python qt@5
          pip3 install --upgrade pip setuptools ds_store mac_alias
          export BDB_INCLUDE_DIR=$(brew --prefix berkeley-db@4)/include
          export BDB_LIB_DIR=$(brew --prefix berkeley-db@4)/lib
          export QT_PATH=$(brew --prefix qt@5)
          export PATH=$QT_PATH/bin:$PATH
          export PKG_CONFIG_PATH=$QT_PATH/lib/pkgconfig:$PKG_CONFIG_PATH

      - name: Build depends (Boost fixes)
        run: |
          export HOST=${{ matrix.arch }}-apple-darwin20.6.0
          export FALLBACK_DOWNLOAD_PATH=https://explorer.yerbas.org/depends/
          cd depends
          # Force clang toolset and suppress enum warnings
          ./bootstrap.sh --with-toolset=clang cxxflags="-Wno-enum-constexpr-conversion -std=c++14" linkflags="-Wno-enum-constexpr-conversion"
          ./b2 install toolset=clang cxxflags="-Wno-enum-constexpr-conversion -std=c++14" linkflags="-Wno-enum-constexpr-conversion" -j$(sysctl -n hw.ncpu) target-os=darwin architecture=${{ matrix.arch }} address-model=${{ matrix.arch == 'x86_64' && echo 64 || echo 32 }}
          cd ..

      - name: Configure VKAX
        run: |
          ./autogen.sh
          ./configure --prefix=$(pwd)/depends/$HOST \
                      --with-boost=$(pwd)/depends/boost \
                      --with-incompatible-bdb \
                      CXXFLAGS="-I$BDB_INCLUDE_DIR -I$QT_PATH/include -Wno-enum-constexpr-conversion -Wno-error=enum-constexpr-conversion" \
                      LDFLAGS="-L$BDB_LIB_DIR -L$QT_PATH/lib" \
                      QT_SELECT=5

      - name: Build Binary
        run: |
          make -j$(sysctl -n hw.ncpu)
          mkdir -p $BUILD_DIR ${BUILD_DIR}_not_strip $TEST_DIR
          mv src/{vkax-cli,vkaxd,qt/vkax-qt} $BUILD_DIR/
          cp src/{vkax-cli,vkaxd,qt/vkax-qt} $TEST_DIR/
          mv src/{vkax-cli,vkaxd,qt/vkax-qt} ${BUILD_DIR}_not_strip/
          strip $BUILD_DIR/* || echo "strip failed â€” skipping"

      - name: Generate DMG
        run: |
          make deploy
          mkdir -p macos-dmg
          mv vkax-Qt.dmg macos-dmg/
          cd macos-dmg
          sha256sum *.dmg > checksums.txt
          cd ..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vkax-macos-${{ matrix.arch }}-macos${{ matrix.macos }}-${{ needs.get-version.outputs.version }}
          path: $BUILD_DIR

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: vkax-macos-${{ matrix.arch }}-dmg-macos${{ matrix.macos }}-${{ needs.get-version.outputs.version }}
          path: macos-dmg
