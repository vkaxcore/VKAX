name: VKAX Build

on:
  push:
    branches:
      - main
      - dev
      - v3.*
  pull_request:
    branches:
      - dev
  workflow_dispatch:

env:
  COIN_NAME: vkax
  BUILD_DIR: vkax-build
  COMPRESS_DIR: vkax-compress
  TEST_DIR: vkax-test

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read versions
        id: versions
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: build.properties
          properties: 'release-version candidate-version snapshot-version'

      - name: Choose version
        id: selected-version
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]] || [[ "$GITHUB_REF" == *dev ]]; then
            version=${{ steps.versions.outputs.snapshot-version }}
          else
            version=${{ steps.versions.outputs.release-version }}
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "BUILD_VERSION=$version" > version.txt

      - name: Upload Version Artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

    outputs:
      version: ${{ steps.selected-version.outputs.version }}

  build-linux:
    name: Linux Build
    needs: get-version
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Packages
        run: |
          sudo apt update -y
          sudo apt install -y build-essential libtool autotools-dev automake pkg-config python3 bsdmainutils cmake git curl

      - name: Fetch working bls-dash
        run: |
          rm -rf depends/work/build/x86_64-pc-linux-gnu/bls-dash
          git clone https://github.com/dashpay/bls-signatures.git depends/work/build/x86_64-pc-linux-gnu/bls-dash
          cd depends/work/build/x86_64-pc-linux-gnu/bls-dash
          git checkout 58216334d30f8a6bfa84b0f879f5672f06fbbb15
          cd -

      - name: Build Depends
        run: make -C depends -j$(nproc) HOST=x86_64-pc-linux-gnu

      - name: Configure & Build VKAX
        run: |
          ./autogen.sh
          ./configure --prefix=$(pwd)/depends/x86_64-pc-linux-gnu
          make -j$(nproc)
          mkdir -p ${BUILD_DIR}
          cp src/{vkax-cli,vkaxd,qt/vkax-qt} ${BUILD_DIR}/

      - name: Compress Build
        run: |
          mkdir -p ${COMPRESS_DIR}
          tar -czvf ${COMPRESS_DIR}/${COIN_NAME}-linux.tar.gz -C ${BUILD_DIR} .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-linux-${{ needs.get-version.outputs.version }}
          path: ${{ env.COMPRESS_DIR }}

  build-macos:
    name: macOS Build
    needs: get-version
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Install Packages
        run: |
          brew install automake libtool pkg-config miniupnpc librsvg libnatpmp zeromq python
          pip3 install ds_store mac_alias
          pip3 install -U pip setuptools

      - name: Fetch working bls-dash
        run: |
          rm -rf depends/work/build/x86_64-apple-darwin20.6.0/bls-dash
          git clone https://github.com/dashpay/bls-signatures.git depends/work/build/x86_64-apple-darwin20.6.0/bls-dash
          cd depends/work/build/x86_64-apple-darwin20.6.0/bls-dash
          git checkout 58216334d30f8a6bfa84b0f879f5672f06fbbb15
          cd -

      - name: Build Depends
        run: make -C depends -j8 HOST=x86_64-apple-darwin20.6.0

      - name: Configure & Build VKAX
        run: |
          ./autogen.sh
          ./configure --prefix=$(pwd)/depends/x86_64-apple-darwin20.6.0
          make -j8
          mkdir -p ${BUILD_DIR}
          cp src/{vkax-cli,vkaxd,qt/vkax-qt} ${BUILD_DIR}/

      - name: Compress Build
        run: |
          mkdir -p ${COMPRESS_DIR}
          tar -czvf ${COMPRESS_DIR}/${COIN_NAME}-macos.tar.gz -C ${BUILD_DIR} .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-macos-${{ needs.get-version.outputs.version }}
          path: ${{ env.COMPRESS_DIR }}

  build-win:
    name: Windows Build
    needs: get-version
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Packages
        run: |
          sudo apt update -y
          sudo apt install -y build-essential libtool autotools-dev automake pkg-config python3 bsdmainutils cmake
          sudo apt install -y g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64 nsis
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: Fetch working bls-dash
        run: |
          rm -rf depends/work/build/x86_64-w64-mingw32/bls-dash
          git clone https://github.com/dashpay/bls-signatures.git depends/work/build/x86_64-w64-mingw32/bls-dash
          cd depends/work/build/x86_64-w64-mingw32/bls-dash
          git checkout 58216334d30f8a6bfa84b0f879f5672f06fbbb15
          cd -

      - name: Build Depends
        run: make -C depends -j$(nproc) HOST=x86_64-w64-mingw32

      - name: Configure & Build VKAX
        run: |
          ./autogen.sh
          ./configure --prefix=$(pwd)/depends/x86_64-w64-mingw32
          make -j$(nproc)
          mkdir -p ${BUILD_DIR}
          cp src/{vkax-cli.exe,vkaxd.exe,qt/vkax-qt.exe} ${BUILD_DIR}/

      - name: Compress Build
        run: |
          mkdir -p ${COMPRESS_DIR}
          zip -r ${COMPRESS_DIR}/${COIN_NAME}-win.zip ${BUILD_DIR}/*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-win-${{ needs.get-version.outputs.version }}
          path: ${{ env.COMPRESS_DIR }}
