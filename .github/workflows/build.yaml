name: VKAX macOS Build
on:
  workflow_dispatch:
  push:
    branches: [ main, v100.11.5-macbuild, dev ]

env:
  COIN_NAME: vkax
  BUILD_DIR: vkax-build
  COMPRESS_DIR: vkax-compress
  HOST: x86_64-apple-darwin
  LC_ALL: C
  LANG: C
  MACOSX_DEPLOYMENT_TARGET: "11.0"
  HOMEBREW_NO_AUTO_UPDATE: "1"
  HOMEBREW_NO_INSTALL_CLEANUP: "1"

jobs:
  build-macos:
    name: Build VKAX macOS 13 (Qt 5.15.10)
    runs-on: macos-13

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Pin Xcode 14.3.1
        run: |
          sudo xcode-select -s /Applications/Xcode_14.3.1.app
          xcodebuild -version
          clang -v | head -n 5
          echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV

      - name: Tooling
        run: |
          brew install automake libtool pkg-config gnu-tar coreutils miniupnpc librsvg libnatpmp zeromq
          python3 -m pip install -U pip setuptools wheel ds_store mac_alias

      - name: Sanitize Qt/qmake env
        shell: bash
        run: |
          unset QMAKESPEC XQMAKESPEC QMAKEPATH QMAKEFEATURES QMAKE QMAKE_SPEC QTDIR QT_PLUGIN_PATH QT_QPA_PLATFORM_PLUGIN_PATH PKG_CONFIG_PATH
          echo "Env sanitized."

      - name: Clean stale depends
        run: |
          make -C depends HOST=${HOST} NO_QT=0 clean || true
          rm -rf depends/work/build/${HOST}/qt* \
                 depends/work/download/qt-* \
                 depends/sources/download-stamps/.stamp_fetched-qt-* || true
          rm -rf depends/${HOST} || true

      - name: Build depends (Qt 5.15.10)
        env:
          HOST: ${{ env.HOST }}
        run: |
          echo "Building dependsâ€¦"
          env -u QMAKESPEC -u XQMAKESPEC -u QMAKEPATH -u QMAKEFEATURES -u QMAKE -u QMAKE_SPEC -u QTDIR -u QT_PLUGIN_PATH -u QT_QPA_PLATFORM_PLUGIN_PATH -u PKG_CONFIG_PATH \
            make -C depends -j"$(sysctl -n hw.ncpu)" HOST=${HOST}

      - name: Configure VKAX (GUI on, no tests)
        env:
          CONFIG_SITE: ${{ github.workspace }}/depends/${{ env.HOST }}/share/config.site
        run: |
          ./autogen.sh || true
          env -u QMAKESPEC -u XQMAKESPEC -u QMAKEPATH -u QMAKEFEATURES -u QMAKE -u QMAKE_SPEC -u QTDIR -u QT_PLUGIN_PATH -u QT_QPA_PLATFORM_PLUGIN_PATH -u PKG_CONFIG_PATH \
          ./configure \
            --prefix="${PWD}/depends/${HOST}" \
            --with-incompatible-bdb \
            --with-gui=qt5 \
            --disable-tests --disable-bench \
            CXXFLAGS="-std=c++14"

      - name: Build
        run: |
          make -j"$(sysctl -n hw.ncpu)"
          mkdir -p "${BUILD_DIR}"
          cp -f src/vkaxd "${BUILD_DIR}/" || true
          cp -f src/vkax-cli "${BUILD_DIR}/" || true
          cp -f src/qt/vkax-qt "${BUILD_DIR}/" || true
          strip "${BUILD_DIR}/"* || true

      - name: Package
        run: |
          mkdir -p "${COMPRESS_DIR}"
          tar -cvzf "${COMPRESS_DIR}/${COIN_NAME}-macos13.tar.gz" -C "${BUILD_DIR}" .

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-macos13-build
          path: ${{ env.COMPRESS_DIR }}/${{ env.COIN_NAME }}-macos13.tar.gz
